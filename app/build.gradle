apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion setup.compileSdk
    buildToolsVersion setup.buildTools

    defaultConfig {
        minSdkVersion setup.minSdk
        targetSdkVersion setup.targetSdk
        versionCode release.versionCode
        versionName release.versionName
        applicationId "com.coressoft.breader"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    greendao {
        //指定数据库schema版本号，迁移等操作会用到
        schemaVersion 3
        //DaoSession、DaoMaster以及所有实体类的dao生成的目录,默认为你的entity所在的包名
        //daoPackage 包名
        daoPackage 'com.coressoft.breader.db'
        //这就是我们上面说到的自定义生成数据库文件的目录了，可以将生成的文件放到我们的java目录中，而不是build中，这样就不用额外的设置资源目录了
        //工程路径
        targetGenDir 'src/main/java'
    }
}

dependencies {
    implementation project(':library')
    implementation "com.android.support:design:27.1.1"
    implementation "com.android.support:appcompat-v7:27.1.1"
    implementation "com.android.support:recyclerview-v7:27.1.1"
    implementation "com.android.support:cardview-v7:27.1.1"
//    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'skin.support:skin-support:1.2.2'
    implementation 'skin.support:skin-support-design:1.2.1'
    implementation 'org.litepal.android:core:1.6.1'
    implementation 'com.lovedise:permissiongen:0.0.6'
    implementation 'com.shamanland:fab:0.0.8'
    implementation 'com.yalantis:contextmenu:1.0.7'
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'com.jcodecraeer:xrecyclerview:1.3.2'
    implementation 'com.balysv:material-ripple:1.0.2'
    implementation 'com.astuetz:pagerslidingtabstrip:1.0.1'
    implementation 'fr.avianey.com.viewpagerindicator:library:2.4.1@aar'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'com.jakewharton:butterknife:8.8.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.0'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'org.greenrobot:greendao-generator:3.2.2'
    implementation 'com.astuetz:pagerslidingtabstrip:1.0.1'
    implementation 'com.github.bumptech.glide:glide:4.4.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.4.0'
    implementation 'de.hdodenhof:circleimageview:3.0.1'
    // used to showcase how to load images
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.github.bumptech.glide:glide:3.8.0'

    // the sample uses more advanced functions of the fastadapter
    // https://github.com/mikepenz/FastAdapter/
    implementation 'com.mikepenz:fastadapter-commons:3.2.8'
    // used to generate the Open Source section
    // https://github.com/mikepenz/AboutLibraries
    implementation 'com.mikepenz:aboutlibraries:6.0.9'

    //used to provide different itemAnimators for the RecyclerView
    //https://github.com/mikepenz/ItemAnimators
    implementation 'com.mikepenz:itemanimators:1.0.2@aar'
    // used to provide the MiniDrawer to normal Drawer crossfade effect via a SlidingPane layout
    // --> https://github.com/mikepenz/MaterialDrawer/blob/develop/app/src/main/java/com/mikepenz/materialdrawer/app/MiniDrawerActivity.java
    // https://github.com/mikepenz/Crossfader
    implementation 'com.mikepenz:crossfader:1.5.1@aar'
    // used to provide the two step crossfade DrawerLayout. Which allows to have a mini layout which transforms to a normal layout within the drawer
    // --> https://github.com/mikepenz/MaterialDrawer/blob/develop/app/src/main/java/com/mikepenz/materialdrawer/app/CrossfadeDrawerLayoutActvitiy.java
    // https://github.com/mikepenz/CrossfadeDrawerLayout
    implementation('com.mikepenz:crossfadedrawerlayout:1.0.1@aar')

    // icon fonts used inside the sample
    // https://github.com/mikepenz/Android-Iconics
    implementation 'com.mikepenz:google-material-typeface:3.0.1.1.original@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.0.6.0@aar'
    implementation 'com.mikepenz:octicons-typeface:3.0.0.1@aar'
}
configurations.all {
    resolutionStrategy.force "com.mikepenz:iconics-core:3.0.4"
    resolutionStrategy.force "com.mikepenz:fastadapter:3.2.8"

}
